{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/device-motion/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;OACnC,EAAE,OAAO,EAAE,MAAM,EAAE,iBAAiB,EAAE,MAAM,oBAAoB;OAChE,EAAE,UAAU,EAAE,MAAM,iBAAiB;AAmC5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BG;AASH;IAAkC,gCAAiB;IAAnD;QAAkC,8BAAiB;IA2BnD,CAAC;IAzBC;;;OAGG;IAEH,6CAAsB,GAAtB,cAAkE,MAAM,CAAC,CAAC,CAAC;IAE3E;;;;OAIG;IAMH,wCAAiB,GAAjB,UAAkB,OAA0C,IAA8C,MAAM,CAAC,CAAC,CAAC;IAE9G,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,2BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IApBA;QAAC,OAAO,EAAE;;;;8DAAA;IAQV;QAAC,OAAO,CAAC;YACP,aAAa,EAAE,SAAS;YACxB,UAAU,EAAE,IAAI;YAChB,aAAa,EAAE,YAAY;SAC5B,CAAC;;;;yDAAA;IA1BJ;QAAC,MAAM,CAAC;YACN,UAAU,EAAE,cAAc;YAC1B,MAAM,EAAE,8BAA8B;YACtC,SAAS,EAAE,yBAAyB;YACpC,IAAI,EAAE,wDAAwD;YAC9D,SAAS,EAAE,CAAC,SAAS,EAAE,eAAe,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,eAAe,CAAC;SACvH,CAAC;;oBAAA;IA6BF,mBAAC;AAAD,CAAC,AA3BD,CAAkC,iBAAiB,GA2BlD","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nexport interface DeviceMotionAccelerationData {\r\n\r\n  /**\r\n   * Amount of acceleration on the x-axis. (in m/s^2)\r\n   */\r\n  x: number;\r\n\r\n  /**\r\n   * Amount of acceleration on the y-axis. (in m/s^2)\r\n   */\r\n  y: number;\r\n\r\n  /**\r\n   * Amount of acceleration on the z-axis. (in m/s^2)\r\n   */\r\n  z: number;\r\n\r\n  /**\r\n   * Creation timestamp in milliseconds.\r\n   */\r\n  timestamp: any;\r\n\r\n}\r\n\r\nexport interface DeviceMotionAccelerometerOptions {\r\n\r\n  /**\r\n   * Requested period of calls to accelerometerSuccess with acceleration data in Milliseconds. Default: 10000\r\n   */\r\n  frequency?: number;\r\n\r\n}\r\n\r\n/**\r\n * @name Device Motion\r\n * @description\r\n * Requires Cordova plugin: `cordova-plugin-device-motion`. For more info, please see the [Device Motion docs](https://github.com/apache/cordova-plugin-device-motion).\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { DeviceMotion, DeviceMotionAccelerationData } from '@ionic-native/device-motion';\r\n *\r\n * constructor(private deviceMotion: DeviceMotion) { }\r\n *\r\n * ...\r\n *\r\n * // Get the device current acceleration\r\n * this.deviceMotion.getCurrentAcceleration().then(\r\n *   (acceleration: DeviceMotionAccelerationData) => console.log(acceleration),\r\n *   (error: any) => console.log(error)\r\n * );\r\n *\r\n * // Watch device acceleration\r\n * var subscription = this.deviceMotion.watchAcceleration().subscribe((acceleration: DeviceMotionAccelerationData) => {\r\n *   console.log(acceleration);\r\n * });\r\n *\r\n * // Stop watch\r\n * subscription.unsubscribe();\r\n *\r\n * ```\r\n * @interfaces\r\n * DeviceMotionAccelerationData\r\n * DeviceMotionAccelerometerOptions\r\n */\r\n@Plugin({\r\n  pluginName: 'DeviceMotion',\r\n  plugin: 'cordova-plugin-device-motion',\r\n  pluginRef: 'navigator.accelerometer',\r\n  repo: 'https://github.com/apache/cordova-plugin-device-motion',\r\n  platforms: ['Android', 'BlackBerry 10', 'Browser', 'Firefox OS', 'iOS', 'Tizen', 'Ubuntu', 'Windows', 'Windows Phone']\r\n})\r\n\r\nexport class DeviceMotion extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Get the current acceleration along the x, y, and z axes.\r\n   * @returns {Promise<DeviceMotionAccelerationData>} Returns object with x, y, z, and timestamp properties\r\n   */\r\n  @Cordova()\r\n  getCurrentAcceleration(): Promise<DeviceMotionAccelerationData> { return; }\r\n\r\n  /**\r\n   * Watch the device acceleration. Clear the watch by unsubscribing from the observable.\r\n   * @param {AccelerometerOptions} options list of options for the accelerometer.\r\n   * @returns {Observable<DeviceMotionAccelerationData>} Observable returns an observable that you can subscribe to\r\n   */\r\n  @Cordova({\r\n    callbackOrder: 'reverse',\r\n    observable: true,\r\n    clearFunction: 'clearWatch'\r\n  })\r\n  watchAcceleration(options?: DeviceMotionAccelerometerOptions): Observable<DeviceMotionAccelerationData> { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}